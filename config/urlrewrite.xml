<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE urlrewrite PUBLIC "-//tuckey.org//DTD UrlRewrite 3.0//EN"
        "http://tuckey.org/res/dtds/urlrewrite3.0.dtd">

<!--
    Configuration file for UrlRewriteFilter
    http://tuckey.org/urlrewrite/
-->
<urlrewrite use-query-string="true">
  <!-- ************* Kick out requests from Radio Tamil toolbar *************** -->
  <rule>
      <condition name="user-agent">Radio\s+Tamil.*</condition>
      <from>.*</from>
      <set type="status">404</set>
      <to>null</to>
  </rule>

  <rule>
    <note> Rewriting rule for clean browse urls with json/xml output!</note>
    <from>^/stories/(.*)/(.*)/(\d*)\.(\w+)(\?(.*))?$</from>
    <to>/api/news?owner=$1&amp;issue=$2&amp;catID=$3&amp;output=$4&amp;$6</to>
  </rule>

  <rule>
    <note> Rewriting rule for clean browse urls!</note>
    <from>^/stories/(.*)/(.*)/(\d*)/?(\?(.*))?$</from>
    <to>/browse?owner=$1&amp;issue=$2&amp;catID=$3&amp;$5</to>
  </rule>

  <rule>
    <note> Rewriting rule for clean browse urls!</note>
    <from>^/topics/(.*)/(.*)/?$</from>
    <to>/browse?owner=$1&amp;issue=$2</to>
  </rule>

  <rule>
    <note> Rewriting rule for clean browse urls!</note>
    <from>^/users/(.*)/?$</from>
    <to>/browse?owner=$1</to>
  </rule>

  <!-- ************* Next 4 rules are redirects from old-style urls to newer cleaner urls *************** -->
  <rule>
    <from>^/[b|B]rowse(.action|.do)?\?owner=(.*?)&amp;(amp;)?catID=([0-9]+)&amp;(amp;)?issue=(.*?)$</from>
    <to type="permanent-redirect">%{context-path}/stories/$2/$6/$4</to>
  </rule>

  <rule>
    <from>^/[b|B]rowse(.action|.do)?\?owner=(.*?)&amp;(amp;)?issue=(.*?)&amp;(amp;)?catID=([0-9]+)$</from>
    <to type="permanent-redirect">%{context-path}/stories/$2/$4/$6</to>
  </rule>

  <rule>
    <from>^/[b|B]rowse(.action|.do)?\?owner=(.*?)&amp;(amp;)?issue=(.*?)$</from>
    <to type="permanent-redirect">%{context-path}/topics/$2/$4</to>
  </rule>

  <rule>
    <from>^/[b|B]rowse(.action|.do)?\?owner=(.*?)$</from>
    <to type="permanent-redirect">%{context-path}/users/$2</to>
  </rule>

  <!-- ************* Next set of rules are redirects from much older-style urls to newer urls *************** -->
  <rule>
    <from>^/DisplayNewsItem\.do(.*)</from>
    <to type="permanent-redirect">%{context-path}/news/display$1</to>
  </rule>
  <rule>
    <from>^/GetIssueTaxonomy\.do(.*)?$</from>
    <to type="permanent-redirect">%{context-path}/api/issue-taxonomy$1</to>
  </rule>

  <rule>
    <from>^/Browse\.do(.*)?$</from>
    <to type="permanent-redirect">%{context-path}/browse$1</to>
  </rule>

  <rule>
    <note> Generic rewriting rule for *.do actions!  Issue a 301 redirect. FIXME: Is this rule required at all? </note>
    <from>^/(.*)\.do(\?.*)?$</from>
    <to type="permanent-redirect">%{context-path}/$1$2</to>
  </rule>

  <rule>
    <note> For crawled feeds!  Issue a 301 redirect </note>
    <from>^/vm/extras.rss-feeds.vm</from>
    <to type="permanent-redirect">%{context-path}/extras/crawled-feeds</to>
  </rule>

  <rule>
    <note> For selected topics!  Issue a 301 redirect </note>
    <from>^/vm/category.selection.vm</from>
    <to type="permanent-redirect">%{context-path}/selected-topics</to>
  </rule>

  <rule>
    <note> For list of known indian feeds!  Issue a 301 redirect </note>
    <from>^/vm/known.indian.rss-feeds.vm</from>
    <to type="permanent-redirect">%{context-path}/extras/known-indian-feeds</to>
  </rule>

  <rule>
    <note> Login! Issue a 301 redirect. FIXME: Is this rule required? </note>
    <from>^/vm/signin.vm$</from>
    <to type="permanent-redirect">%{context-path}/forms/login</to>
  </rule>

  <rule>
    <note> Registration! Issue a 301 redirect. FIXME: Is this rule required? </note>
    <from>^/vm/register.vm$</from>
    <to type="permanent-redirect">%{context-path}/forms/register</to>
  </rule>

  <rule>
    <note> Generic rewriting rule!  Issue a 301 redirect </note>
    <from>^/vm/(.*)\.vm$</from>
    <to type="permanent-redirect">%{context-path}/about/$1</to>
  </rule>

  <rule>
    <note> Discourage *.action urls!</note>
    <from>^/(.*)\.action(.*)$</from>
    <to type="permanent-redirect">%{context-path}/$1$2</to>
  </rule>

  <!-- ######################################################################
       These rules below serve 'clean-looking' urls and translate them to
       what struts2 is encoded to understand
       ###################################################################### -->
  <rule>
    <from>^/?$</from>
    <to>/selected-topics.action</to>
  </rule>

  <rule>
    <note> 
       Generic rewrite that appends the ".action" -> with url parameters
       I am doing some gymnastics here to prevent .css and .js file requests from being rewritten!
     </note>
    <from>^/([^\.]+)\?(.+)$</from>
    <to>/$1.action?$2</to>
  </rule>

  <rule>
    <note> 
       Generic rewrite that appends the ".action" -> without url parameters 
       I am doing some gymnastics here to prevent .css and .js file requests from being rewritten!
    </note>
    <from>^/([^\.]+)/?$</from>
    <to>/$1.action</to>
  </rule>

  <rule>
    <note> Catch all rule! </note>
    <from>(.*)</from>
    <to>$1</to>
  </rule>

  <!-- #############################
       Outbound rules begin here ...
       ############################# -->
  <outbound-rule>
    <name>Strip URL Session ID's -- copied from the urlrewrite manual</name>
    <note>
        Strip ;jsession=XXX from urls passed through response.encodeURL().
        The characters ? and # are the only things we can use to find out where the jsessionid ends.
        The expression in 'from' below contains three capture groups, the last two being optional.
            1, everything before ;jesessionid
            2, everything after ;jesessionid=XXX starting with a ?  (to get the query string) up to #
            3, everything ;jesessionid=XXX and optionally ?XXX starting with a # (to get the target)
        eg,
        from index.jsp;jsessionid=sss?qqq to index.jsp?qqq
        from index.jsp;jsessionid=sss?qqq#ttt to index.jsp?qqq#ttt
        from index.jsp;jsessionid=asdasdasdsadsadasd#dfds - index.jsp#dfds
        from u.jsp;jsessionid=wert.hg - u.jsp
        from /;jsessionid=tyu - /
    </note>
    <condition name="user-agent">googlebot</condition>
    <from>^(.*?)(?:\;jsessionid=[^\?#]*)?(\?[^#]*)?(#.*)?$</from>
    <to>$1$2$3</to>
  </outbound-rule>

  <outbound-rule>
    <from>browse(.action)?\?(.*)catID=([0-9]+)&amp;(amp;)?(.*)issue=(.*?)&amp;(amp;)?owner=([^\\&amp;]+)(&amp;(amp;)?(.*))?$</from>
    <to>stories/$8/$6/$3?$2$5$11</to>
  </outbound-rule>

  <outbound-rule>
    <from>browse(.action)?\?owner=([^\\&amp;]+)&amp;(amp;)?(.*)&amp;(amp;)?catID=([0-9]+)&amp;(amp;)?issue=(.*?)$</from>
    <to>stories/$2/$8/$6?$4</to>
  </outbound-rule>

  <outbound-rule>
    <from>browse(.action)?\?owner=(.*?)&amp;(amp;)?catID=([0-9]+)&amp;(amp;)?issue=(.*?)$</from>
    <to>stories/$2/$6/$4</to>
  </outbound-rule>

  <outbound-rule>
    <from>browse(.action)?\?owner=(.*?)&amp;(amp;)?issue=(.*?)$</from>
    <to>topics/$2/$4</to>
  </outbound-rule>

  <outbound-rule>
    <from>browse(.action)?\?owner=(.*?)$</from>
    <to>users/$2</to>
  </outbound-rule>

  <outbound-rule>
    <note> Strips the ".action" suffix in urls </note>
    <from>(.*)\.action(.*)$</from>
    <to>$1$2</to>
  </outbound-rule>
</urlrewrite>
