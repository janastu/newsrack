## Miscellaneous global properties
testing              = true
readonly             = true
debugging            = true
cached.links.display = true
crawlers.home        = /var/lib/tomcat5.5/webapps/newsrack.crawlers/
#useragent.string     = "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008072820 Firefox/3.0.1"

## Properties pertaining to archiving
archive.orig  = true
archive.filt  = true
archive.days  = infinity

## Properties pertaining to RSS feeds (input & output)
rssfeedName              = rss.xml
rss.max_description_size = 1024
rssDir                   = rss/

## Properties pertaining to filtering and matching
java.compiler         = /usr/bin/javac
concept.match.minhits = 2
filter.match.minscore = 2

## Properties pertaining to the archiver
download.init_delay.secs   = 300
download.period.mins       = 90
download.feed.max_attempts = 10
download.max_threads       = 4
classify.max_threads       = 2

## What DB interface is being used?
dbInterface = newsrack.database.sql.SQL_DB

## Properties pertaining to the DB being used above
sql.archiveHome             = /data/newsrack/archive/
sql.userHome                = /data/newsrack/users/
sql.userInfoDir             = files/
sql.userWorkDir             = generated/
sql.driver                  = com.mysql.jdbc.Driver
sql.dbUrl                   = jdbc:mysql://localhost
sql.dbName                  = REPLACE_ME:db_name_here
sql.user                    = REPLACE_ME:user_name_here
sql.password                = REPLACE_ME:password_here
sql.dbConnPoolSize          = 8
sql.dbMaxConnections        = 16
sql.migrating               = false
sql.migration.digesterRules = sqldb.migration.rules.xml
sql.migration.userIssuesDir = issues

## Properties pertaining to the object cache
user.cache.size     = 10000
issue.cache.size    = 1000
category.cache.size = 10000
filter.cache.size   = 10000

# about 4000 feed objects should easily fit in 1MB; 256 bytes per feed object in common case
feed.cache.size     = 5000

# about 8000 source objects should easily fit in 1MB; 128 bytes per source object in common case
source.cache.size   = 10000

# about 1000 newsitem objects should easily fit in 1MB; 1024 bytes per news item in the worst case
newsitem.cache.size = 5000

# generic object cache for all other objects not captured above (concepts, news indexes, lists of various things, etc.)
object.cache.size   = 10000

# cache for storing final target urls for proxy urls
urls.cache.size     = 20000

## cache.path = /var/lib/tomcat5.5/webapps/nr.ocache

## Properties for emailing
email.admin.emailid    = email.id@here
email.system.fromid    = email.id@here
email.smtp.server      = smtp.server.com
email.smtp.port        = 25
email.smtp.auth        = true   
                         ## or false
email.smtp.auth.user   = userid
email.smtp.auth.passwd = password
email.smtp.ssl         = false
                         ## or false
